trigger:
  branches:
    include:
      - azure-pipelines

pr:
  branches:
    include:
      - azure-pipelines

pool:
  name: 'Chandan'  # Managed node pool name

variables:
  services: "adservice cartservice checkoutservice currencyservice emailservice frontend loadgenerator paymentservice productcatalogservice recommendationservice shippingservice shoppingassistantservice"
  sonarHost: "http://54.82.85.241:9000/"
  sonarToken: "squ_80c52fbbe68721fce9eb901fc1ae78fe23d78dcf"  # Replace with your SonarQube token

stages:
  - stage: SonarQubeSetup
    displayName: 'SonarQube Project Setup'
    jobs:
      - job: CreateProjects
        displayName: 'Create SonarQube Projects'
        steps:
          - script: |
              for service in $(services); do
                echo "Setting up SonarQube for $service..."

                # Prepare analysis configuration
                echo "Preparing SonarQube analysis for ${service}..."
                - task: SonarQubePrepare@6
                  inputs:
                    SonarQube: 'sonar'  # Replace with your SonarQube service connection name
                    scannerMode: 'CLI'
                    configMode: 'manual'
                    cliProjectKey: '${service}'  # Directly use the service variable
                    cliProjectName: '${service}'  # Directly use the service variable
                    cliSources: 'src/${service}'  # Update this to point to the correct source folder
                    extraProperties: |
                      sonar.java.binaries=src/${service}/.  # Adjust path as necessary

                # Run SonarQube analysis
                echo "Running SonarQube analysis for ${service}..."
                - task: SonarQubeAnalyze@6
                  inputs:
                    jdkversion: 'JAVA_HOME_17_X64'  # Specify the JDK version you are using
              done
            displayName: 'Create SonarQube Projects and Run Scans'
